#!/bin/sh

usage() {
    echo "$0 [-l PLATFORM] COMMAND_FILE1 [COMMAND_FILE2]..."
}

main() {
    while getopts l: opt; do
        case "$opt" in
            l) local_platform="$OPTARG" ;;
        esac
    done
    shift $(( OPTIND - 1))
    OPTIND=1

    if ! (( $# )); then
        usage >&2
        exit 1
    fi

    if [ -n "$local_platform" ]; then
        _execute() {
            mkdir -p "$1"
            /bin/sh caniuse.sh >|"$1/${local_platform}.csv"
        }
    fi

    for command_file; do
        run_cmds "$command_file"
    done
}

_execute() {
    util/vagrant-foreach "$1" caniuse.sh "$2"
}


run_cmds() {
    filename=$(basename -- "$1")
    result_dir="results/${filename%.*}"
    outfile="$output_dir/$filename"

    jq -r 'flatten[]' "$1" >|cmds.txt
    if hash dos2unix 2>/dev/null; then
        dos2unix cmds.txt
    fi

    _execute "$result_dir" cmds.txt

    rm -f -- cmds.txt

    util/csv2json "$result_dir"/*.csv

    util/combine-json-by-name "$result_dir"/*.json |
        jq 'with_entries(
            .value[] |= { key:.cmd, value:.exists } |
            .value |= from_entries)' \
        >|lookup.json

    jq keys <lookup.json >| "$output_dir/platforms.json"

    jq  --slurpfile platforms "$output_dir/platforms.json" \
        --slurpfile lookup lookup.json \
        'with_entries(
            .value[] |= . as $val |
                [{ command:. }] + [
                    [$platforms[0][] | {key:., value:$lookup[0][.][$val]}] | from_entries
                ] |
                add
        )' \
        "$1" >|"$outfile"

    rm -f -- lookup.json
}

output_dir="gh-pages/_data"

main "$@"
